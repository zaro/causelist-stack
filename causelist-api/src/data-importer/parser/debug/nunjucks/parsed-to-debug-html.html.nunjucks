{% macro causeList(doc) %}
    <table class="with-border">
      <tr>
        <th colspan=2>CauseList</th>
      </tr>
      {% if not doc.header %}
      <tr>
        <th colspan="2">INVALID HEADER</th>
      </tr>
      {% else %}
      <tr>
        <th>Court</th> <td>{{ doc.header.court | default(['<MISSING>']) | join(', ' )}}</td>
      </tr>
      <tr>
        <th>Date</th> <td>{{ doc.header.date | date }}</td>
      </tr>
      <tr>
        <th>Judge</th> <td>{{ doc.header.judge }}</td>
      </tr>
      <tr>
        <th>Court Room</th> <td>{{ doc.header.courtRoom}}</td>
      </tr>
      <tr>
        <th>URL</th> <td>{{ doc.header.url}}</td>
      </tr>
      <tr>
        <th>Email</th> <td>{{ doc.header.email}}</td>
      </tr>
      <tr>
        <th>Phone</th> <td>{{ doc.header.phone}}</td>
      </tr>
      {% endif %}
    </table>
    {% if doc.causeLists %}
    <ul>
      {% for section in doc.causeLists %}
      <li>
        {% if section.dateTime %}<b>{{ section.dateTime | date('hh:mm aa') }}</b><br>{% endif %}
        <b>{{ section.typeOfCause }}</b>
        <ul>
          {% for l in section.cases %}
            <li>{% if l.num %}{{ l.num }}.{% endif %} <i>{{ l.additionalNumber | default('')}}</i> <b>{{ l.caseNumber | default('???')}}</b> {% if l.description %}{{ l.description }}{% else %}{{ l.partyA}} <b>VS</b> {{ l.partyB }}{% endif %}</li>
          {% endfor %}
        </ul>
      </li>
      {% endfor %}
    </ul>
    {% endif %}
    <hr>
{% endmacro %}

{% macro unassignedMatters(doc) %}
    <table class="with-border">
      <tr>
        <th colspan=2>Unassigned Matters</th>
      </tr>
      {% if not doc.header %}
      <tr>
        <th colspan="2">INVALID</th>
      </tr>
      {% else %}
      <tr>
        <th>Date</th> <td>{{ doc.header.date | date }}</td>
      </tr>
      {% endif %}
    </table>
    {% if doc.header %}
    <ul>
      {% for c in doc.cases %}
        <li>{% if c.num %}{{ c.num }}.{% endif %} <b>{{ c.typeOfCause }}</b> <b>{{ c.caseNumber | default('???')}}</b> {% if c.description %}{{ c.description }}{% else %}{{ c.partyA}} <b>VS</b> {{ c.partyB }}{% endif %}</li>
      {% endfor %}
    </ul>
    {% endif %}
    <hr>
{% endmacro %}

{% macro showDocuments(documents) %}
    {% for doc in documents %}
    {% if doc.type == 'CAUSE LIST' %}
    {{ causeList(doc) }}
    {% elif doc.type == 'UNASSIGNED MATTERS' %}
    {{ unassignedMatters(doc) }}
    {% else %}
    <b> UNKNOWN DOCUMENT TYPE: {{ doc.type}} </b>
    {% endif %}
    {% endfor %}
{% endmacro %}


<!DOCTYPE html>
<html>
  <head>
  </head>
  <body>
    <style>
      .green {
        color: green;
      }
      .red {
        color: red;
      }

      h1 { text-align: center }
      h2 { text-align: center }
      h3 { text-align: center }
      table.with-border {
        border: 1px solid grey;
      }
      table.with-border th {
        border: 1px solid grey;
        text-align: left;
      }
      table.with-border td {
        border: 1px solid grey;
        text-align: left;
      }
      .thick {
        font-weight: bold;
      }

      pre.ln {
          padding: 10px 16px;
      }

      pre.ln span {
        display: block;
        counter-increment: line;
      }

      pre.ln span:before {
          content: counter(line);
          display: inline-block;
          border-right: 1px solid #ddd;
          color: #888;
          margin-right: 1em;
      }

      pre.ln span.thick:before {
          color: #000;
      }

      .parserDebug {
        margin-left: 1em;
      }

    </style>
    <style>
        {% include 'render-json.css.nunjucks' %}
    </style>
    <script>
      function onAClick(e){
        const targetUrl = new URL(e.target.href)
        const elId = targetUrl.hash.replace(/^#/,'');
        const el = document.getElementById(elId);
        if(el){
          el.scrollIntoView();
          e.preventDefault();
        }
      }
    </script>
    <h2 class="{% if parserReachedEnd %}green{% else %}red{% endif %}">{{ fileName }}</h2>
    <h3>Parsed content follows</h3>
    <h3>matchScore={{ matchScore }}, minValidScore={{minValidScore}}</h3>
    {% if not parserReachedEnd %}
    <h3><a onClick="onAClick(event)" href="#line-{{ currentLine + 1}}">Stopped at line: {{ currentLine + 1}}</a></h3>
    {% endif %}
    <hr>
    {{ showDocuments(documents) }}
    {% if error %}
    <h4>Parsing Error</h4>
    <pre>{{ error.stack }}</pre>
    {% for p in parsersTried %}
      <div class="parserDebug">
        <h3>{{ p.name}} - <a onClick="onAClick(event)"  href="#line-{{ p.currentLine + 1}}">Stopped at line: {{ p.currentLine + 1}}</a></h3>
        {{ showDocuments(p.documents) }}
      </div>
    {% endfor %}
    <hr>
    {% endif %}
    <details open>
      <summary>
        Document plain text
        <span class="icon">ðŸ‘‡</span>
      </summary>
        <b>Parsing stopped on line {{ currentLine }}</b>
        <pre class="ln">
          {%- for l in numberedLines -%}
          <span id="line-{{ loop.index }}" {% if l.current %}class="thick"{% endif %}>{{- l.l -}}{{- "\n" -}}</span>
          {%- endfor -%}
        <pre>
    </details>
    <details {% if error %}open{% endif %}>
      <script>
        {% include 'render-json.js.nunjucks' %}
      </script>
      <summary>
        Match Scores Trees
        <span class="icon">ðŸ‘‡</span>
      </summary>
      <div id="scores"></div>
      <script>
        renderjson.set_show_to_level('all');
        document.getElementById("scores").appendChild(
          renderjson({{ matchScoreTree | dump | safe }})
        );
      </script>
    </details>
  </body>
</html>